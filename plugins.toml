[[plugins]]
repo = 'Shougo/dein.vim'
rtp = ''

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'
# on_source = ['unite.vim', 'vimshell.vim']


#unite

[[plugins]]
repo = 'Shougo/neomru.vim'
on_path = '.*'

[[plugins]]
repo = 'Shougo/unite.vim'
depends = 'neomru.vim'
hook_source = 'source ~/.vim/rc/unite.rc.vim'
hook_post_source = '''
  call unite#custom#default_action("source/vimpatches/*", "openbuf")
'''

[[plugins]]
repo = 'Shougo/unite-outline'
on_source = 'unite.vim'

[[plugins]]
repo = 'tacroe/unite-mark'
on_source = 'unite.vim'

[[plugins]]
repo = 'mattn/unite-gist'
depends = 'gist-vim'

[[plugins]]
repo = 'tsukkee/unite-tag'
on_source = 'unite.vim'

[[plugins]]
repo = 'Shougo/unite-help'
on_source = 'unite.vim'

[[plugins]]
repo = 'thinca/vim-unite-history'
on_source = 'unite.vim'

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_source = 'unite.vim'
on_path = '.*'
on_if = 1
on_event = 'TextYankPost'

[[plugins]]
repo = 'osyo-manga/unite-fold'
on_source = 'unite.vim'

[[plugins]]
repo = 'osyo-manga/unite-highlight'
on_source = 'unite.vim'

[[plugins]]
repo = 'osyo-manga/unite-quickrun_config'
on_source = 'unite.vim'

[[plugins]]
repo = 'osyo-manga/unite-quickfix'
on_source = 'unite.vim'

[[plugins]]
repo = 'kmnk/vim-unite-giti'
on_source = 'unite.vim'

[[plugins]]
repo = 'Kocha/vim-unite-tig'
on_source = 'unite.vim'

[[plugins]]
repo = 'osyo-manga/unite-airline_themes'
on_source = 'unite.vim'

[[plugins]]
repo = 'ujihisa/unite-colorscheme'
on_source = 'unite.vim'

[[plugins]]
repo = 'pasela/unite-webcolorname'
on_source = 'unite.vim'


#view

[[plugins]]
repo = 'gutenye/json5.vim'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'


[[plugins]]
repo = 'powerman/vim-plugin-AnsiEsc'

[[plugins]]
repo = 'bling/vim-airline'

[[plugins]]
repo = 'vim-airline/vim-airline-themes'


#action

[[plugins]]
repo = 'tyru/nextfile.vim'
hook_add = '''
  let g:nf_map_next         = '[f'
  let g:nf_map_previous     = ']f'
  let g:nf_include_dotfiles = 0
  let g:nf_ignore_dir       = 1
  let g:nf_open_command     = 'edit'
'''

# [[plugins]]
# repo = 'LeafCage/yankround.vim'

[[plugins]]
repo = 'bfredl/nvim-miniyank'
hook_add = '''
  let g:miniyank_filename = $HOME . "/.vim/tmp/miniyank.mpack"
'''
hook_source = '''
  map p <Plug>(miniyank-autoput)
  map P <Plug>(miniyank-autoPut)
  map <c-n> <Plug>(miniyank-cycle)
'''

[[plugins]]
repo = 'kana/vim-submode'
hook_post_source = 'source ~/.vim/rc/submode.rc.vim'
on_map = '<Plug>'

[[plugins]]
repo = 'tyru/vim-altercmd'
hook_post_source = 'source ~/.vim/rc/altercmd.rc.vim'

[[plugins]]
repo = 'kana/vim-repeat'
# repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'tpope/vim-speeddating'
hook_post_source = '''
  SpeedDatingFormat! %v
  SpeedDatingFormat! %^v
'''

[[plugins]]
repo = 'LeafCage/foldCC.vim'
hook_add = '''
  let g:foldCCtext_enable_autofdc_adjuster = 0
  let g:foldCCtext_head = 'printf("%3d ", v:foldend - v:foldstart+1)'
  let g:foldCCtext_tail = ''
'''

[[plugins]]
repo = 'Konfekt/FastFold'

[[plugins]]
repo = 'kana/vim-niceblock'
on_map = ['<Plug>(niceblock-I)', '<Plug>(niceblock-gI)', '<Plug>(niceblock-A)']
hook_add = '''
  xmap I  <Plug>(niceblock-I)
  xmap A  <Plug>(niceblock-A)
'''

[[plugins]]
repo = 't9md/vim-choosewin'

[[plugins]]
repo = 'bkad/CamelCaseMotion'

[[plugins]]
repo = 'Lokaltog/vim-easymotion'

[[plugins]]
repo = 'kana/vim-smartword'

[[plugins]]
repo = 'rhysd/clever-f.vim'

# [[plugins]]
# repo = 'matchit.zip'

[[plugins]] # speedy
repo = 'itchyny/vim-parenmatch'
hook_add = '''
  let g:loaded_matchparen = 1
'''

[[plugins]]
repo = 'tyru/caw.vim'

[[plugins]]
repo = 'taku-o/vim-vis'

#search and replace

[[plugins]] # show search point on the command-line
repo = 'osyo-manga/vim-anzu'

[[plugins]]
repo = 'haya14busa/incsearch.vim'

[[plugins]]
repo = 'osyo-manga/vim-over'
hook_post_source = 'OverCommandLineNoremap <CR> <CR>'


#syntaxchecker

# [[plugins]]
# repo = 'scrooloose/syntastic.git'

[[plugins]]
repo = 'osyo-manga/vim-watchdogs'
depends = ['vim-quickrun', 'shabadou.vim', 'vim-hier', 'quickfixstatus', ]
hook_source = '''
  command! WatchdogsC89 let b:watchdogs_checker_type = 'watchdogs_checker/c89'
  au u10ac BufRead,BufNewFile ~/codes/jprog/* WatchdogsC89
'''

[[plugins]]
repo = 'dannyob/quickfixstatus'

[[plugins]] # forked from pocke from cohama
repo = 'pocke/vim-hier'
hook_add = '''
  au u10ac ColorScheme * hi hier cterm=undercurl ctermfg=NONE ctermbg=NONE
  let g:hier_highlight_group_qf = 'hier'
  au u10ac InsertLeave * silent! HierUpdate
'''


#quickrun

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_source = 'source ~/.vim/rc/quickrun.rc.vim'

[[plugins]]
repo = 'osyo-manga/shabadou.vim'

[[plugins]]
repo = 'osyo-manga/quickrun-outputter-replace_region'

# [[plugins]]
# repo  = 'rhysd/quickrun-unite-quickfix-outputter'


#input

[[plugins]]
repo = 'Shougo/neoinclude.vim'

# [[plugins]]
# repo = 'Shougo/neopairs.vim'

[[plugins]]
repo = 'Shougo/neocomplete.vim'
depends = 'context_filetype.vim'
if = "!has('nvim')"
hook_source = 'source ~/.vim/rc/complete.rc.vim'

[[plugins]]
repo = 'cohama/lexima.vim'
hook_post_source = 'source ~/.vim/rc/lexima.rc.vim'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

# [[plugins]]
# repo = 'honza/vim-snippets'

[[plugins]]
repo = 'ujihisa/neco-look'

# deoplete
[[plugins]]
repo = 'zchee/deoplete-clang'
on_ft = ['c', 'cpp']

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = 'python'

[[plugins]]
repo = 'zchee/deoplete-go'
on_i = 1
on_ft = 'go'
build = 'make'
hook_source = '''
  let g:deoplete#sources#go#align_class = 1
  let g:deoplete#sources#go#sort_class = ['package', 'func', 'type', 'var', 'const']
  let g:deoplete#sources#go#package_dot = 1
'''

[[plugins]]
repo = 'fishbullet/deoplete-ruby'
on_ft = 'ruby'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
if = "has('nvim')"
on_i = 1
hook_add = 'let g:deoplete#enable_at_startup = 1'
hook_source = 'source ~/.vim/rc/deoplete.rc.vim'


#git

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
# gitのdiffを行に表示
repo = 'airblade/vim-gitgutter'
hook_post_source = 'hi GitGutterChangeDefault ctermfg=226'

[[plugins]]
# git log --graph
repo = 'idanarye/vim-merginal'

[[plugins]]
# git log
repo = 'cohama/agit.vim'

[[plugins]]
# git add -p
repo = 'AndrewRadev/gapply.vim'

[[plugins]]
repo = 'rhysd/committia.vim'

[[plugins]]
repo = 'rhysd/conflict-marker.vim'


#web

[[plugins]]
repo = 'mattn/webapi-vim'

[[plugins]]
repo = 'mattn/wwwrenderer-vim'

[[plugins]]
repo = 'thinca/vim-openbuf'


#tag and ref

[[plugins]]
repo = 'thinca/vim-ref'

[[plugins]]
repo = 'yuku-t/vim-ref-ri'

[[plugins]]
repo = 'mfumi/ref-dicts-en'


#operator

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]] # gr
repo = 'kana/vim-operator-replace'
depends = 'vim-operator-user'

[[plugins]] # yank delete changeなどのblockwise版
repo = 'osyo-manga/vim-textobj-blockwise'
depends = 'vim-operator-block'

[[plugins]]
repo = 'osyo-manga/vim-operator-block'
depends = 'vim-operator-user'

[[plugins]] # sa sd sr
repo = 'rhysd/vim-operator-surround'
depends = 'vim-operator-user'

[[plugins]]
repo = 'osyo-manga/vim-operator-exec_command'
depends = 'vim-operator-user'


#textobj

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]] # e buffer
repo = 'kana/vim-textobj-entire'
depends = 'vim-textobj-user'

[[plugins]] # l -> i
repo = 'kana/vim-textobj-indent'
depends = 'vim-textobj-user'

[[plugins]] # y syntax-highlight
repo = 'kana/vim-textobj-syntax'
depends = 'vim-textobj-user'

[[plugins]] # z
repo = 'kana/vim-textobj-fold'
depends = 'vim-textobj-user'

[[plugins]] # l -> L ignore last-char of current-line
repo = 'kana/vim-textobj-line'
depends = 'vim-textobj-user'

[[plugins]] # u
repo = 'mattn/vim-textobj-url'
depends = 'vim-textobj-user'

[[plugins]] # w use it with CamelCaseMotion
repo = 'h1mesuke/textobj-wiw'
depends = 'vim-textobj-user'

[[plugins]] # c
repo = 'thinca/vim-textobj-comment'
depends = 'vim-textobj-user'

[[plugins]] # f{char} select a range between character
repo = 'thinca/vim-textobj-between'
depends = 'vim-textobj-user'

[[plugins]] # ip last pasted textobj. don't have ap
repo = 'gilligan/textobj-lastpaste'
depends = 'vim-textobj-user'

[[plugins]] # sb some block
repo = 'osyo-manga/vim-textobj-multiblock'
depends = 'vim-textobj-user'

[[plugins]] # I A 連続したtextobjを矩形選択 ciw -> cIw
repo = 'osyo-manga/vim-textobj-blockwise'
depends = 'vim-textobj-user'

[[plugins]] # Can make textobj by regex
repo = 'osyo-manga/vim-textobj-from_regexp'
depends = 'vim-textobj-user'

[[plugins]] # q some syntax /../ '..'
repo = 'deris/vim-textobj-enclosedsyntax'
depends = 'vim-textobj-user'

[[plugins]] # 複数のtextobjを一つにまとめる
repo = 'osyo-manga/vim-textobj-multitextobj'
depends = 'vim-textobj-user'

[[plugins]] # change keymap f -> F
repo = 'kana/vim-textobj-function'
depends = 'vim-textobj-user'

[[plugins]]
repo = 'bps/vim-textobj-python'
depends = 'vim-textobj-user'


#colorscheme

[[plugins]]
repo = 'tomasr/molokai'

[[plugins]]
repo = 'djjcast/mirodark'

[[plugins]]
repo = 'vim-scripts/BusyBee'

[[plugins]]
repo = 'NLKNguyen/papercolor-theme'

[[plugins]]
repo = 'freeo/vim-kalisi'


#misc

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'osyo-manga/vim-precious'


[[plugins]]
repo = 'vim-jp/vital.vim'

[[plugins]]
repo = 'Shougo/echodoc'
on_event = 'CompleteDone'
# hook_source = 'call echodoc#enable()'
hook_add = '''
  let g:echodoc_enable_at_startup = 1
'''

[[plugins]] # :PP! is same as :echomes
repo = 'thinca/vim-prettyprint'
on_cmd = 'PP'

# [[plugins]]
# repo = "mattn/benchvimrc-vim"

# [[plugins]]
# repo = 'Valodim/vim-zsh-completion'

# [[plugins]]
# repo = 'fweep/vim-zsh-path-completion'
