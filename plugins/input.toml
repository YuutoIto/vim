## sources

[[plugins]]
repo = 'deoplete-plugins/deoplete-lsp'
hook_add = '''
  " let g:deoplete#lsp#handler_enabled = v:false
'''

[[plugins]]
if = 0
repo = 'tbodt/deoplete-tabnine'
build = './install.sh'


[[plugins]]
repo = 'mattn/googlesuggest-complete-vim'
hook_add = '''
  command! EnableGoogleSuggest set completefunc=googlesuggest#Complete
  EnableGoogleSuggest
'''

[[plugins]] # text
repo = 'ujihisa/neco-look'

[[plugins]] # text
repo = 'Shougo/deoplete-nextword'

[[plugins]] # vim
repo = 'Shougo/neco-vim'

[[plugins]]
repo = 'zchee/deoplete-clang'
# repo = 'tweekmonster/deoplete-clang2'
if = 'executable("clang")'
hook_add = '''
  let b:clang2_orig_maps = {}

  let g:deoplete#sources#clang#libclang_path = '/usr/lib/libclang.so'
  let g:deoplete#sources#clang#clang_header = '/usr/lib/clang'
  let g:deoplete#sources#clang#std = { 'c': 'gnu11', 'cpp': 'c++1z' }
  " let g:deoplete#sources#clang#flags = ['-x', 'c++'] " libclang default compile flags
'''

[[plugins]]
repo = 'zchee/deoplete-zsh'


## base

[[plugins]]
repo = 'Shougo/neosnippet.vim'
lazy = 1
on_event = ['InsertEnter']
on_ft = ['snippet', 'neosnippet']
hook_add = '''
  let g:neosnippet#snippets_directory = '~/.vim/snippets'
  let g:neosnippet#disable_runtime_snippets = { '_': 1 }
  let g:neosnippet#enable_completed_snippet = 0
  let g:neosnippet#enable_auto_clear_markers = 0

  " let g:neosnippet#enable_conceal_markers = 1
  " let g:neosnippet#conceal_char = '|'

  " CompleteDoneで展開する
  let g:neosnippet#enable_complete_done = 0
  " 単語境界でも展開する
  let g:neosnippet#expand_word_boundary = 1

  let g:neosnippet#scope_aliases = {
    \ 'ruby': 'ruby,ruby-rails',
    \ 'arduino': 'c',
    \ 'typescript': 'typescriptreact',
    \ }

  " どのみち保存前に消される
  " au myac InsertLeave * NeoSnippetClearMarkers
'''

[[plugins]]
repo = 'cohama/lexima.vim'
lazy = 1
on_event = ['InsertEnter']
hook_add = '''
  " 補完メニューが開いていてもエンターで改行する
  let g:lexima_accept_pum_with_enter = 0
  let g:lexima_enable_endwise_rules = 0
'''
hook_post_source = 'source ~/.vim/rc/lexima.rc.vim'

# [[plugins]]
# repo = 'Shougo/echodoc.vim'
# # on_event = 'CompleteDone'
# hook_add = '''
#   let g:echodoc_enable_at_startup = 1
#   let g:echodoc#type = 'virtual'
# '''
# hook_source = '''
#   " call echodoc#enable()
# '''

[[plugins]] # completeopt+=previewの変わりにフローティングウィンドウを表示させる
repo = 'ncm2/float-preview.nvim'
# on_source = 'deoplete.nvim'
if = 'has("nvim")'
hook_add = '''
  " 0: 補完候補の隣に表示
  " 1: ウィンド下部に表示
  let g:float_preview#docked = 0
  let g:float_preview#max_width = 80
  let g:float_preview#max_height = 20
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = ['deoplete-lsp']
lazy = 1
if = "has('nvim')"
on_event = ['InsertEnter']
hook_source = '''
  source ~/.vim/rc/deoplete.rc.vim
  call deoplete#enable()
'''
