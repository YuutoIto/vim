# short
snippet pu
	public
snippet po
	protected
snippet pr
	private
snippet st
	static
snippet fi
	final
snippet ab
	abstract
snippet re
	return
snippet br
	break;
snippet de
	default:
		${1}
snippet ca
	catch(${1:Exception} ${2:e}) ${3}
snippet th
	throw
snippet sy
	synchronized
snippet im
	import

# import
snippet j.u
	java.util
snippet j.i
	java.io.
snippet j.b
	java.beans.
snippet j.n
	java.net.
snippet j.m
	java.math.


snippet ifl
	if(${1}) ${2}

snippet elifl
	else if(${1}) ${2}

snippet else
alias el
	else {
    ${0}
  }

snippet whl
	while(${1}) ${2}
snippet forl
	for(${1}; ${2}; ${3}) ${4}
snippet forel
	for(${1} : ${2}) ${3}

snippet tc
	public class ${1:`Filename()`} extends ${2:TestCase} {
    ${0}
  }

snippet cl
	class ${1:`Filename("", "untitled")`} ${2}
snippet in
	interface ${1:`Filename("", "untitled")`} ${2:extends Parent}${3}

snippet as
	assert ${1:test} : "${2:Failure message}";${3}
